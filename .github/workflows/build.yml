name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "1.23.7"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: install package
        run: go mod tidy

      - name: build
        run: go build

      - name: test
        run: go test ./...

      - run: ./sqldot --output=qq.dot

      - run: ls

      - id: save_dot_file_content
        run: |
          echo "DOTFILE_CONTENT<<EOF" >> $GITHUB_OUTPUT
          cat qq.dot >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - run: echo "${{ steps.save_dot_file_content.outputs.DOTFILE_CONTENT }}"

      - name: post comment
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `
              ${{ steps.save_dot_file_content.outputs.DOTFILE_CONTENT }}
            `

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })
